// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var sidenav = Css.style(/* :: */[
      Css.height(Css.vh(100.0)),
      /* :: */[
        Css.width(Css.rem(20.0)),
        /* :: */[
          Css.left(Css.zero),
          /* :: */[
            Css.backgroundColor(Css.hex("222F3E")),
            /* :: */[
              Css.overflowX(Css.hidden),
              /* :: */[
                Css.paddingTop(Css.px(20)),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var anchorBase = Css.style(/* :: */[
      Css.padding4(Css.px(6), Css.px(8), Css.px(6), Css.px(16)),
      /* :: */[
        Css.textDecoration(Css.none),
        /* :: */[
          Css.color(Css.hex("F5F6FA")),
          /* :: */[
            Css.display(Css.block),
            /* [] */0
          ]
        ]
      ]
    ]);

var anchorHover = Css.style(/* :: */[
      Css.hover(/* :: */[
            Css.color(Css.white),
            /* [] */0
          ]),
      /* [] */0
    ]);

var anchorStyle = Css.merge(/* :: */[
      anchorBase,
      /* :: */[
        anchorHover,
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* sidenav */sidenav,
  /* anchorBase */anchorBase,
  /* anchorHover */anchorHover,
  /* anchorStyle */anchorStyle
];

var component = ReasonReact.statelessComponent("Sidebar");

function anchorItem(anchorText, $staropt$star, href, param) {
  var style = $staropt$star !== undefined ? $staropt$star : anchorBase;
  if (href !== undefined) {
    return React.createElement("a", {
                key: anchorText,
                className: anchorStyle,
                href: href
              }, anchorText);
  } else {
    return React.createElement("a", {
                key: anchorText,
                className: style,
                href: "#" + anchorText
              }, anchorText);
  }
}

function make(appOptions, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("div", {
                          className: sidenav
                        }, $$Array.map((function (el) {
                                return anchorItem(el, anchorStyle, undefined, /* () */0);
                              }), appOptions));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Styles = Styles;
exports.component = component;
exports.anchorItem = anchorItem;
exports.make = make;
/* sidenav Not a pure module */
